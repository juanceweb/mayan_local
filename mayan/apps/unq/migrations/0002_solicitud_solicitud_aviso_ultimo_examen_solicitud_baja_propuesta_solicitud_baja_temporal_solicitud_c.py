# Generated by Django 3.2.20 on 2023-09-26 14:53

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('unq', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Solicitud_Aviso_Ultimo_Examen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(help_text='descripcion de la propuesta.', max_length=255, verbose_name='descripcion propuesta')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
                ('orientaciones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, help_text='lista de orientaciones.', max_length=255, null=True, size=None, verbose_name='lista de orientaciones')),
                ('actividad', models.CharField(help_text='aactividad.', max_length=255, verbose_name='actividad')),
                ('fecha_ultimo_examen', models.DateField(help_text='fecha ultimo examen.', verbose_name='fecha ultimo examen')),
                ('email_alternativo', models.EmailField(help_text='email_alternativo.', max_length=255, verbose_name='email_alternativo')),
                ('tel_contacto', models.CharField(help_text='telefono contacto.', max_length=255, verbose_name='telefono contacto')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Baja_Propuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(blank=True, help_text='descripcion de la propuesta.', max_length=255, null=True, verbose_name='descripcion propuesta')),
                ('motivos', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, help_text='motivos.', null=True, size=None, verbose_name='lista de motivos')),
                ('otros_motivos', models.CharField(blank=True, help_text='otros motivos.', max_length=255, null=True, verbose_name='otros motivos')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
                ('email_alternativo', models.EmailField(help_text='email_alternativo.', max_length=255, verbose_name='email_alternativo')),
                ('tel_contacto', models.CharField(help_text='telefono contacto.', max_length=255, verbose_name='telefono contacto')),
                ('fecha_inscripcion', models.DateField(help_text='fecha inscripcion.', verbose_name='fecha inscripcion')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Baja_Temporal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(blank=True, help_text='descripcion de la propuesta.', max_length=255, null=True, verbose_name='descripcion propuesta')),
                ('plazo', models.CharField(max_length=20)),
                ('motivos', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, help_text='motivos.', null=True, size=None, verbose_name='lista de motivos')),
                ('otros_motivos', models.CharField(blank=True, help_text='otros motivos.', max_length=255, null=True, verbose_name='otros motivos')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Cambio_Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(help_text='descripcion de la propuesta.', max_length=255, verbose_name='descripcion propuesta')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Equivalencias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(help_text='descripcion de la propuesta.', max_length=255, verbose_name='descripcion propuesta')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Grilla',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(blank=True, help_text='descripcion de la propuesta.', max_length=255, null=True, verbose_name='descripcion propuesta')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('domicilio', models.JSONField(help_text='domicilio.', null=True, verbose_name='domicilio')),
                ('acta', models.CharField(help_text='acta.', max_length=255, verbose_name='acta')),
                ('sede', models.CharField(help_text='sede.', max_length=255, verbose_name='sede')),
                ('nota', models.CharField(help_text='nota.', max_length=255, verbose_name='nota')),
                ('actividad', models.CharField(help_text='actividad.', max_length=255, verbose_name='actividad')),
                ('tipo_solicitud', models.CharField(help_text='tipo solicitud.', max_length=255, verbose_name='tipo de solicitud.')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
                ('docentes', models.JSONField(help_text='lista de docentes.', null=True, verbose_name='lista de docentes')),
                ('fecha', models.DateField(help_text='fecha inscripcion.', verbose_name='fecha inscripcion')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_Licencia_Examen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_propuesta', models.CharField(help_text='codigo de la propuesta.', max_length=255, verbose_name='codigo propuesta')),
                ('descripcion_propuesta', models.CharField(help_text='descripcion de la propuesta.', max_length=255, verbose_name='descripcion propuesta')),
                ('nombres', models.CharField(help_text='nombres del estudiante.', max_length=255, verbose_name='nombres')),
                ('apellido', models.CharField(help_text='apellido del estudiante.', max_length=255, verbose_name='apellido')),
                ('tipo_documento', models.CharField(help_text='tipo de documento', max_length=255, verbose_name='tipo documento')),
                ('nro_documento', models.CharField(help_text='numero de documento.', max_length=255, verbose_name='numero documento')),
                ('tutores', models.JSONField(help_text='lista de tutores.', null=True, verbose_name='lista de tutores')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aviso_ultimo_examen', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de aviso de ultimo examen.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_aviso_ultimo_examen', verbose_name='solicitud aviso ultimo examen')),
                ('baja_propuesta', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de baja de propuesta guarani.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_baja_propuesta', verbose_name='solicitud baja propuesta guarani')),
                ('baja_temporal', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de baja temporal.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_baja_temporal', verbose_name='solicitud baja temporal')),
                ('cambio_plan', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de cambio de plan.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_cambio_plan', verbose_name='solicitud cambio plan')),
                ('equivalencias', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de equivalencias guarani.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_equivalencias', verbose_name='solicitud equivalencias guarani')),
                ('grilla', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de grilla.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_grilla', verbose_name='solicitud grilla')),
                ('licencia_examen', models.OneToOneField(blank=True, help_text='si el doc es una solicitud de licencia por examen.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='unq.solicitud_licencia_examen', verbose_name='solicitud licencia examen')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
